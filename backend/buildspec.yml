version: 0.2

env:
  parameter-store:
    SECRET_KEY: /library-management/SECRET_KEY
    DB_PASSWORD: /library-management/DB_PASSWORD
    AWS_ACCOUNT_ID: /library-management/AWS_ACCOUNT_ID
    ECR_REPOSITORY_URI: /library-management/ECR_REPOSITORY_URI
  variables:
    AWS_DEFAULT_REGION: us-east-1
    IMAGE_TAG: latest
    CONTAINER_NAME: library-management

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Build started on `date`
      - echo Building the Docker image...

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $CONTAINER_NAME:$IMAGE_TAG .
      - docker tag $CONTAINER_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $CONTAINER_NAME:$IMAGE_TAG $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yml
    - taskdef.json
  name: library-management-$(date +%Y-%m-%d)

cache:
  paths:
    - '/root/.cache/pip/**/*'